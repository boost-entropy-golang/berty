// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: berty/errcode.proto

package errcode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCode int32

const (
	ErrCode_Undefined                      ErrCode = 0   // default value, should never be set manually
	ErrCode_TODO                           ErrCode = 666 // indicates that you plan to create an error later
	ErrCode_ErrNotImplemented              ErrCode = 777 // indicates that a method is not implemented yet
	ErrCode_ErrInternal                    ErrCode = 888 // indicates an unknown error (without Code), i.e. in gRPC
	ErrCode_ErrInvalidInput                ErrCode = 100
	ErrCode_ErrInvalidRange                ErrCode = 101
	ErrCode_ErrMissingInput                ErrCode = 102
	ErrCode_ErrSerialization               ErrCode = 103
	ErrCode_ErrDeserialization             ErrCode = 104
	ErrCode_ErrStreamRead                  ErrCode = 105
	ErrCode_ErrStreamWrite                 ErrCode = 106
	ErrCode_ErrStreamTransform             ErrCode = 110
	ErrCode_ErrStreamSendAndClose          ErrCode = 111
	ErrCode_ErrStreamHeaderWrite           ErrCode = 112
	ErrCode_ErrStreamHeaderRead            ErrCode = 115
	ErrCode_ErrStreamSink                  ErrCode = 113
	ErrCode_ErrStreamCloseAndRecv          ErrCode = 114
	ErrCode_ErrMissingMapKey               ErrCode = 107
	ErrCode_ErrDBWrite                     ErrCode = 108
	ErrCode_ErrDBRead                      ErrCode = 109
	ErrCode_ErrDBDestroy                   ErrCode = 120
	ErrCode_ErrDBMigrate                   ErrCode = 121
	ErrCode_ErrDBReplay                    ErrCode = 122
	ErrCode_ErrDBRestore                   ErrCode = 123
	ErrCode_ErrDBOpen                      ErrCode = 124
	ErrCode_ErrDBClose                     ErrCode = 125
	ErrCode_ErrCryptoRandomGeneration      ErrCode = 200
	ErrCode_ErrCryptoKeyGeneration         ErrCode = 201
	ErrCode_ErrCryptoNonceGeneration       ErrCode = 202
	ErrCode_ErrCryptoSignature             ErrCode = 203
	ErrCode_ErrCryptoSignatureVerification ErrCode = 204
	ErrCode_ErrCryptoDecrypt               ErrCode = 205
	ErrCode_ErrCryptoDecryptPayload        ErrCode = 206
	ErrCode_ErrCryptoEncrypt               ErrCode = 207
	ErrCode_ErrCryptoKeyConversion         ErrCode = 208
	ErrCode_ErrCryptoCipherInit            ErrCode = 209
	ErrCode_ErrCryptoKeyDerivation         ErrCode = 210
	ErrCode_ErrMap                         ErrCode = 300
	ErrCode_ErrForEach                     ErrCode = 301
	ErrCode_ErrKeystoreGet                 ErrCode = 400
	ErrCode_ErrKeystorePut                 ErrCode = 401
	ErrCode_ErrNotFound                    ErrCode = 404 // generic
	ErrCode_ErrIPFSAdd                     ErrCode = 1050
	ErrCode_ErrIPFSGet                     ErrCode = 1051
	ErrCode_ErrIPFSInit                    ErrCode = 1052
	ErrCode_ErrIPFSSetupConfig             ErrCode = 1053
	ErrCode_ErrIPFSSetupRepo               ErrCode = 1054
	ErrCode_ErrIPFSSetupHost               ErrCode = 1055
	// Event errors
	ErrCode_ErrEventListMetadata                   ErrCode = 1400
	ErrCode_ErrEventListMessage                    ErrCode = 1401
	ErrCode_ErrBridgeInterrupted                   ErrCode = 1600
	ErrCode_ErrBridgeNotRunning                    ErrCode = 1601
	ErrCode_ErrMessengerInvalidDeepLink            ErrCode = 2000
	ErrCode_ErrMessengerDeepLinkRequiresPassphrase ErrCode = 2001
	ErrCode_ErrMessengerDeepLinkInvalidPassphrase  ErrCode = 2002
	ErrCode_ErrMessengerStreamEvent                ErrCode = 2003
	ErrCode_ErrMessengerContactMetadataUnmarshal   ErrCode = 2004
	ErrCode_ErrDBEntryAlreadyExists                ErrCode = 2100
	ErrCode_ErrDBAddConversation                   ErrCode = 2101
	ErrCode_ErrDBAddContactRequestOutgoingSent     ErrCode = 2102
	ErrCode_ErrDBAddContactRequestOutgoingEnqueud  ErrCode = 2103
	ErrCode_ErrDBAddContactRequestIncomingReceived ErrCode = 2104
	ErrCode_ErrDBAddContactRequestIncomingAccepted ErrCode = 2105
	ErrCode_ErrDBAddGroupMemberDeviceAdded         ErrCode = 2106
	ErrCode_ErrDBMultipleRecords                   ErrCode = 2107
	ErrCode_ErrReplayProcessGroupMetadata          ErrCode = 2200
	ErrCode_ErrReplayProcessGroupMessage           ErrCode = 2201
	ErrCode_ErrAttachmentPrepare                   ErrCode = 2300
	ErrCode_ErrAttachmentRetrieve                  ErrCode = 2301
	ErrCode_ErrProtocolSend                        ErrCode = 2302
	ErrCode_ErrProtocolEventUnmarshal              ErrCode = 2303
	ErrCode_ErrProtocolGetGroupInfo                ErrCode = 2304
	// Test Error
	ErrCode_ErrTestEcho                                          ErrCode = 2401
	ErrCode_ErrTestEchoRecv                                      ErrCode = 2402
	ErrCode_ErrTestEchoSend                                      ErrCode = 2403
	ErrCode_ErrServicesAuth                                      ErrCode = 4000
	ErrCode_ErrServicesAuthNotInitialized                        ErrCode = 4001
	ErrCode_ErrServicesAuthWrongState                            ErrCode = 4002
	ErrCode_ErrServicesAuthInvalidResponse                       ErrCode = 4003
	ErrCode_ErrServicesAuthServer                                ErrCode = 4004
	ErrCode_ErrServicesAuthCodeChallenge                         ErrCode = 4005
	ErrCode_ErrServicesAuthServiceInvalidToken                   ErrCode = 4006
	ErrCode_ErrServicesAuthServiceNotSupported                   ErrCode = 4007
	ErrCode_ErrServicesAuthUnknownToken                          ErrCode = 4008
	ErrCode_ErrServicesAuthInvalidURL                            ErrCode = 4009
	ErrCode_ErrCLINoTermcaps                                     ErrCode = 3001
	ErrCode_ErrServicesDirectory                                 ErrCode = 4200
	ErrCode_ErrServicesDirectoryInvalidVerifiedCredentialSubject ErrCode = 4201
	ErrCode_ErrServicesDirectoryExistingRecordNotFound           ErrCode = 4202
	ErrCode_ErrServicesDirectoryRecordLockedAndCantBeReplaced    ErrCode = 4203
	ErrCode_ErrServicesDirectoryExplicitReplaceFlagRequired      ErrCode = 4204
	ErrCode_ErrServicesDirectoryInvalidVerifiedCredential        ErrCode = 4205
	ErrCode_ErrServicesDirectoryExpiredVerifiedCredential        ErrCode = 4206
	ErrCode_ErrServicesDirectoryInvalidVerifiedCredentialID      ErrCode = 4207
	ErrCode_ErrBertyAccount                                      ErrCode = 5000
	ErrCode_ErrBertyAccountNoIDSpecified                         ErrCode = 5001
	ErrCode_ErrBertyAccountAlreadyOpened                         ErrCode = 5002
	ErrCode_ErrBertyAccountInvalidIDFormat                       ErrCode = 5003
	ErrCode_ErrBertyAccountLoggerDecorator                       ErrCode = 5004
	ErrCode_ErrBertyAccountGRPCClient                            ErrCode = 5005
	ErrCode_ErrBertyAccountOpenAccount                           ErrCode = 5006
	ErrCode_ErrBertyAccountDataNotFound                          ErrCode = 5007
	ErrCode_ErrBertyAccountMetadataUpdate                        ErrCode = 5008
	ErrCode_ErrBertyAccountManagerOpen                           ErrCode = 5009
	ErrCode_ErrBertyAccountManagerClose                          ErrCode = 5010
	ErrCode_ErrBertyAccountInvalidCLIArgs                        ErrCode = 5011
	ErrCode_ErrBertyAccountFSError                               ErrCode = 5012
	ErrCode_ErrBertyAccountAlreadyExists                         ErrCode = 5013
	ErrCode_ErrBertyAccountNoBackupSpecified                     ErrCode = 5014
	ErrCode_ErrBertyAccountIDGenFailed                           ErrCode = 5015
	ErrCode_ErrBertyAccountCreationFailed                        ErrCode = 5016
	ErrCode_ErrBertyAccountUpdateFailed                          ErrCode = 5017
	ErrCode_ErrAppStorageNotSupported                            ErrCode = 5018
	ErrCode_ErrPush                                              ErrCode = 6000
	ErrCode_ErrPushWrongAccount                                  ErrCode = 6001
	ErrCode_ErrPushUnableToDecrypt                               ErrCode = 6002
	ErrCode_ErrPushInvalidPayload                                ErrCode = 6003
	ErrCode_ErrPushInvalidServerConfig                           ErrCode = 6004
	ErrCode_ErrPushMissingBundleID                               ErrCode = 6005
	ErrCode_ErrPushUnknownDestination                            ErrCode = 6006
	ErrCode_ErrPushProvider                                      ErrCode = 6007
	ErrCode_ErrPushUnknownProvider                               ErrCode = 6008
	ErrCode_ErrNoProvidersConfigured                             ErrCode = 6009
	ErrCode_ErrInvalidPrivateKey                                 ErrCode = 6010
	ErrCode_ErrPushServerNotFound                                ErrCode = 6011
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:    "Undefined",
		666:  "TODO",
		777:  "ErrNotImplemented",
		888:  "ErrInternal",
		100:  "ErrInvalidInput",
		101:  "ErrInvalidRange",
		102:  "ErrMissingInput",
		103:  "ErrSerialization",
		104:  "ErrDeserialization",
		105:  "ErrStreamRead",
		106:  "ErrStreamWrite",
		110:  "ErrStreamTransform",
		111:  "ErrStreamSendAndClose",
		112:  "ErrStreamHeaderWrite",
		115:  "ErrStreamHeaderRead",
		113:  "ErrStreamSink",
		114:  "ErrStreamCloseAndRecv",
		107:  "ErrMissingMapKey",
		108:  "ErrDBWrite",
		109:  "ErrDBRead",
		120:  "ErrDBDestroy",
		121:  "ErrDBMigrate",
		122:  "ErrDBReplay",
		123:  "ErrDBRestore",
		124:  "ErrDBOpen",
		125:  "ErrDBClose",
		200:  "ErrCryptoRandomGeneration",
		201:  "ErrCryptoKeyGeneration",
		202:  "ErrCryptoNonceGeneration",
		203:  "ErrCryptoSignature",
		204:  "ErrCryptoSignatureVerification",
		205:  "ErrCryptoDecrypt",
		206:  "ErrCryptoDecryptPayload",
		207:  "ErrCryptoEncrypt",
		208:  "ErrCryptoKeyConversion",
		209:  "ErrCryptoCipherInit",
		210:  "ErrCryptoKeyDerivation",
		300:  "ErrMap",
		301:  "ErrForEach",
		400:  "ErrKeystoreGet",
		401:  "ErrKeystorePut",
		404:  "ErrNotFound",
		1050: "ErrIPFSAdd",
		1051: "ErrIPFSGet",
		1052: "ErrIPFSInit",
		1053: "ErrIPFSSetupConfig",
		1054: "ErrIPFSSetupRepo",
		1055: "ErrIPFSSetupHost",
		1400: "ErrEventListMetadata",
		1401: "ErrEventListMessage",
		1600: "ErrBridgeInterrupted",
		1601: "ErrBridgeNotRunning",
		2000: "ErrMessengerInvalidDeepLink",
		2001: "ErrMessengerDeepLinkRequiresPassphrase",
		2002: "ErrMessengerDeepLinkInvalidPassphrase",
		2003: "ErrMessengerStreamEvent",
		2004: "ErrMessengerContactMetadataUnmarshal",
		2100: "ErrDBEntryAlreadyExists",
		2101: "ErrDBAddConversation",
		2102: "ErrDBAddContactRequestOutgoingSent",
		2103: "ErrDBAddContactRequestOutgoingEnqueud",
		2104: "ErrDBAddContactRequestIncomingReceived",
		2105: "ErrDBAddContactRequestIncomingAccepted",
		2106: "ErrDBAddGroupMemberDeviceAdded",
		2107: "ErrDBMultipleRecords",
		2200: "ErrReplayProcessGroupMetadata",
		2201: "ErrReplayProcessGroupMessage",
		2300: "ErrAttachmentPrepare",
		2301: "ErrAttachmentRetrieve",
		2302: "ErrProtocolSend",
		2303: "ErrProtocolEventUnmarshal",
		2304: "ErrProtocolGetGroupInfo",
		2401: "ErrTestEcho",
		2402: "ErrTestEchoRecv",
		2403: "ErrTestEchoSend",
		4000: "ErrServicesAuth",
		4001: "ErrServicesAuthNotInitialized",
		4002: "ErrServicesAuthWrongState",
		4003: "ErrServicesAuthInvalidResponse",
		4004: "ErrServicesAuthServer",
		4005: "ErrServicesAuthCodeChallenge",
		4006: "ErrServicesAuthServiceInvalidToken",
		4007: "ErrServicesAuthServiceNotSupported",
		4008: "ErrServicesAuthUnknownToken",
		4009: "ErrServicesAuthInvalidURL",
		3001: "ErrCLINoTermcaps",
		4200: "ErrServicesDirectory",
		4201: "ErrServicesDirectoryInvalidVerifiedCredentialSubject",
		4202: "ErrServicesDirectoryExistingRecordNotFound",
		4203: "ErrServicesDirectoryRecordLockedAndCantBeReplaced",
		4204: "ErrServicesDirectoryExplicitReplaceFlagRequired",
		4205: "ErrServicesDirectoryInvalidVerifiedCredential",
		4206: "ErrServicesDirectoryExpiredVerifiedCredential",
		4207: "ErrServicesDirectoryInvalidVerifiedCredentialID",
		5000: "ErrBertyAccount",
		5001: "ErrBertyAccountNoIDSpecified",
		5002: "ErrBertyAccountAlreadyOpened",
		5003: "ErrBertyAccountInvalidIDFormat",
		5004: "ErrBertyAccountLoggerDecorator",
		5005: "ErrBertyAccountGRPCClient",
		5006: "ErrBertyAccountOpenAccount",
		5007: "ErrBertyAccountDataNotFound",
		5008: "ErrBertyAccountMetadataUpdate",
		5009: "ErrBertyAccountManagerOpen",
		5010: "ErrBertyAccountManagerClose",
		5011: "ErrBertyAccountInvalidCLIArgs",
		5012: "ErrBertyAccountFSError",
		5013: "ErrBertyAccountAlreadyExists",
		5014: "ErrBertyAccountNoBackupSpecified",
		5015: "ErrBertyAccountIDGenFailed",
		5016: "ErrBertyAccountCreationFailed",
		5017: "ErrBertyAccountUpdateFailed",
		5018: "ErrAppStorageNotSupported",
		6000: "ErrPush",
		6001: "ErrPushWrongAccount",
		6002: "ErrPushUnableToDecrypt",
		6003: "ErrPushInvalidPayload",
		6004: "ErrPushInvalidServerConfig",
		6005: "ErrPushMissingBundleID",
		6006: "ErrPushUnknownDestination",
		6007: "ErrPushProvider",
		6008: "ErrPushUnknownProvider",
		6009: "ErrNoProvidersConfigured",
		6010: "ErrInvalidPrivateKey",
		6011: "ErrPushServerNotFound",
	}
	ErrCode_value = map[string]int32{
		"Undefined":                              0,
		"TODO":                                   666,
		"ErrNotImplemented":                      777,
		"ErrInternal":                            888,
		"ErrInvalidInput":                        100,
		"ErrInvalidRange":                        101,
		"ErrMissingInput":                        102,
		"ErrSerialization":                       103,
		"ErrDeserialization":                     104,
		"ErrStreamRead":                          105,
		"ErrStreamWrite":                         106,
		"ErrStreamTransform":                     110,
		"ErrStreamSendAndClose":                  111,
		"ErrStreamHeaderWrite":                   112,
		"ErrStreamHeaderRead":                    115,
		"ErrStreamSink":                          113,
		"ErrStreamCloseAndRecv":                  114,
		"ErrMissingMapKey":                       107,
		"ErrDBWrite":                             108,
		"ErrDBRead":                              109,
		"ErrDBDestroy":                           120,
		"ErrDBMigrate":                           121,
		"ErrDBReplay":                            122,
		"ErrDBRestore":                           123,
		"ErrDBOpen":                              124,
		"ErrDBClose":                             125,
		"ErrCryptoRandomGeneration":              200,
		"ErrCryptoKeyGeneration":                 201,
		"ErrCryptoNonceGeneration":               202,
		"ErrCryptoSignature":                     203,
		"ErrCryptoSignatureVerification":         204,
		"ErrCryptoDecrypt":                       205,
		"ErrCryptoDecryptPayload":                206,
		"ErrCryptoEncrypt":                       207,
		"ErrCryptoKeyConversion":                 208,
		"ErrCryptoCipherInit":                    209,
		"ErrCryptoKeyDerivation":                 210,
		"ErrMap":                                 300,
		"ErrForEach":                             301,
		"ErrKeystoreGet":                         400,
		"ErrKeystorePut":                         401,
		"ErrNotFound":                            404,
		"ErrIPFSAdd":                             1050,
		"ErrIPFSGet":                             1051,
		"ErrIPFSInit":                            1052,
		"ErrIPFSSetupConfig":                     1053,
		"ErrIPFSSetupRepo":                       1054,
		"ErrIPFSSetupHost":                       1055,
		"ErrEventListMetadata":                   1400,
		"ErrEventListMessage":                    1401,
		"ErrBridgeInterrupted":                   1600,
		"ErrBridgeNotRunning":                    1601,
		"ErrMessengerInvalidDeepLink":            2000,
		"ErrMessengerDeepLinkRequiresPassphrase": 2001,
		"ErrMessengerDeepLinkInvalidPassphrase":  2002,
		"ErrMessengerStreamEvent":                2003,
		"ErrMessengerContactMetadataUnmarshal":   2004,
		"ErrDBEntryAlreadyExists":                2100,
		"ErrDBAddConversation":                   2101,
		"ErrDBAddContactRequestOutgoingSent":     2102,
		"ErrDBAddContactRequestOutgoingEnqueud":  2103,
		"ErrDBAddContactRequestIncomingReceived": 2104,
		"ErrDBAddContactRequestIncomingAccepted": 2105,
		"ErrDBAddGroupMemberDeviceAdded":         2106,
		"ErrDBMultipleRecords":                   2107,
		"ErrReplayProcessGroupMetadata":          2200,
		"ErrReplayProcessGroupMessage":           2201,
		"ErrAttachmentPrepare":                   2300,
		"ErrAttachmentRetrieve":                  2301,
		"ErrProtocolSend":                        2302,
		"ErrProtocolEventUnmarshal":              2303,
		"ErrProtocolGetGroupInfo":                2304,
		"ErrTestEcho":                            2401,
		"ErrTestEchoRecv":                        2402,
		"ErrTestEchoSend":                        2403,
		"ErrServicesAuth":                        4000,
		"ErrServicesAuthNotInitialized":          4001,
		"ErrServicesAuthWrongState":              4002,
		"ErrServicesAuthInvalidResponse":         4003,
		"ErrServicesAuthServer":                  4004,
		"ErrServicesAuthCodeChallenge":           4005,
		"ErrServicesAuthServiceInvalidToken":     4006,
		"ErrServicesAuthServiceNotSupported":     4007,
		"ErrServicesAuthUnknownToken":            4008,
		"ErrServicesAuthInvalidURL":              4009,
		"ErrCLINoTermcaps":                       3001,
		"ErrServicesDirectory":                   4200,
		"ErrServicesDirectoryInvalidVerifiedCredentialSubject": 4201,
		"ErrServicesDirectoryExistingRecordNotFound":           4202,
		"ErrServicesDirectoryRecordLockedAndCantBeReplaced":    4203,
		"ErrServicesDirectoryExplicitReplaceFlagRequired":      4204,
		"ErrServicesDirectoryInvalidVerifiedCredential":        4205,
		"ErrServicesDirectoryExpiredVerifiedCredential":        4206,
		"ErrServicesDirectoryInvalidVerifiedCredentialID":      4207,
		"ErrBertyAccount":                  5000,
		"ErrBertyAccountNoIDSpecified":     5001,
		"ErrBertyAccountAlreadyOpened":     5002,
		"ErrBertyAccountInvalidIDFormat":   5003,
		"ErrBertyAccountLoggerDecorator":   5004,
		"ErrBertyAccountGRPCClient":        5005,
		"ErrBertyAccountOpenAccount":       5006,
		"ErrBertyAccountDataNotFound":      5007,
		"ErrBertyAccountMetadataUpdate":    5008,
		"ErrBertyAccountManagerOpen":       5009,
		"ErrBertyAccountManagerClose":      5010,
		"ErrBertyAccountInvalidCLIArgs":    5011,
		"ErrBertyAccountFSError":           5012,
		"ErrBertyAccountAlreadyExists":     5013,
		"ErrBertyAccountNoBackupSpecified": 5014,
		"ErrBertyAccountIDGenFailed":       5015,
		"ErrBertyAccountCreationFailed":    5016,
		"ErrBertyAccountUpdateFailed":      5017,
		"ErrAppStorageNotSupported":        5018,
		"ErrPush":                          6000,
		"ErrPushWrongAccount":              6001,
		"ErrPushUnableToDecrypt":           6002,
		"ErrPushInvalidPayload":            6003,
		"ErrPushInvalidServerConfig":       6004,
		"ErrPushMissingBundleID":           6005,
		"ErrPushUnknownDestination":        6006,
		"ErrPushProvider":                  6007,
		"ErrPushUnknownProvider":           6008,
		"ErrNoProvidersConfigured":         6009,
		"ErrInvalidPrivateKey":             6010,
		"ErrPushServerNotFound":            6011,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_berty_errcode_proto_enumTypes[0].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_berty_errcode_proto_enumTypes[0]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_berty_errcode_proto_rawDescGZIP(), []int{0}
}

type ErrDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []ErrCode `protobuf:"varint,1,rep,packed,name=codes,proto3,enum=berty.errcode.ErrCode" json:"codes,omitempty"`
}

func (x *ErrDetails) Reset() {
	*x = ErrDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_berty_errcode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrDetails) ProtoMessage() {}

func (x *ErrDetails) ProtoReflect() protoreflect.Message {
	mi := &file_berty_errcode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrDetails.ProtoReflect.Descriptor instead.
func (*ErrDetails) Descriptor() ([]byte, []int) {
	return file_berty_errcode_proto_rawDescGZIP(), []int{0}
}

func (x *ErrDetails) GetCodes() []ErrCode {
	if x != nil {
		return x.Codes
	}
	return nil
}

var File_berty_errcode_proto protoreflect.FileDescriptor

var file_berty_errcode_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2f, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x65, 0x72, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x2a, 0xcb, 0x1c, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x04, 0x54,
	0x4f, 0x44, 0x4f, 0x10, 0x9a, 0x05, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74,
	0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x10, 0x89, 0x06, 0x12, 0x10,
	0x0a, 0x0b, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0xf8, 0x06,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x10, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x72,
	0x72, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x10, 0x66, 0x12,
	0x14, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x67, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x72, 0x72, 0x44, 0x65, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x68, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x10, 0x69,
	0x12, 0x12, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x10, 0x6a, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x6e, 0x12, 0x19, 0x0a, 0x15,
	0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6e, 0x64,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10, 0x6f, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x10,
	0x70, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x10, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x72,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x69, 0x6e, 0x6b, 0x10, 0x71, 0x12, 0x19, 0x0a,
	0x15, 0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41,
	0x6e, 0x64, 0x52, 0x65, 0x63, 0x76, 0x10, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x10, 0x6b, 0x12, 0x0e,
	0x0a, 0x0a, 0x45, 0x72, 0x72, 0x44, 0x42, 0x57, 0x72, 0x69, 0x74, 0x65, 0x10, 0x6c, 0x12, 0x0d,
	0x0a, 0x09, 0x45, 0x72, 0x72, 0x44, 0x42, 0x52, 0x65, 0x61, 0x64, 0x10, 0x6d, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x44, 0x42, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x10, 0x78, 0x12,
	0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x44, 0x42, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x10,
	0x79, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x44, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x10, 0x7a, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x44, 0x42, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x10, 0x7b, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x44, 0x42, 0x4f, 0x70, 0x65,
	0x6e, 0x10, 0x7c, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x44, 0x42, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x10, 0x7d, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0xc8, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x4b, 0x65, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xc9, 0x01,
	0x12, 0x1d, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xca, 0x01, 0x12,
	0x17, 0x0a, 0x12, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0xcb, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x45, 0x72, 0x72, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xcc, 0x01, 0x12, 0x15, 0x0a,
	0x10, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x10, 0xcd, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x10,
	0xce, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x10, 0xcf, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x72, 0x72,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x10, 0xd0, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x10, 0xd1, 0x01,
	0x12, 0x1b, 0x0a, 0x16, 0x45, 0x72, 0x72, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4b, 0x65, 0x79,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xd2, 0x01, 0x12, 0x0b, 0x0a,
	0x06, 0x45, 0x72, 0x72, 0x4d, 0x61, 0x70, 0x10, 0xac, 0x02, 0x12, 0x0f, 0x0a, 0x0a, 0x45, 0x72,
	0x72, 0x46, 0x6f, 0x72, 0x45, 0x61, 0x63, 0x68, 0x10, 0xad, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x45,
	0x72, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x10, 0x90, 0x03,
	0x12, 0x13, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x75, 0x74, 0x10, 0x91, 0x03, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x94, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x49, 0x50,
	0x46, 0x53, 0x41, 0x64, 0x64, 0x10, 0x9a, 0x08, 0x12, 0x0f, 0x0a, 0x0a, 0x45, 0x72, 0x72, 0x49,
	0x50, 0x46, 0x53, 0x47, 0x65, 0x74, 0x10, 0x9b, 0x08, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x72, 0x72,
	0x49, 0x50, 0x46, 0x53, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x9c, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x45,
	0x72, 0x72, 0x49, 0x50, 0x46, 0x53, 0x53, 0x65, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x10, 0x9d, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x72, 0x72, 0x49, 0x50, 0x46, 0x53, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6f, 0x10, 0x9e, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x45,
	0x72, 0x72, 0x49, 0x50, 0x46, 0x53, 0x53, 0x65, 0x74, 0x75, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x10,
	0x9f, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x10, 0xf8, 0x0a, 0x12, 0x18, 0x0a,
	0x13, 0x45, 0x72, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x10, 0xf9, 0x0a, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x64, 0x10,
	0xc0, 0x0c, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4e,
	0x6f, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0xc1, 0x0c, 0x12, 0x20, 0x0a, 0x1b,
	0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0xd0, 0x0f, 0x12, 0x2b,
	0x0a, 0x26, 0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x44, 0x65,
	0x65, 0x70, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x10, 0xd1, 0x0f, 0x12, 0x2a, 0x0a, 0x25, 0x45,
	0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x44, 0x65, 0x65, 0x70, 0x4c,
	0x69, 0x6e, 0x6b, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x10, 0xd2, 0x0f, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x72, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x10, 0xd3, 0x0f, 0x12, 0x29, 0x0a, 0x24, 0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x65, 0x6e, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x10, 0xd4, 0x0f,
	0x12, 0x1c, 0x0a, 0x17, 0x45, 0x72, 0x72, 0x44, 0x42, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x6c,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0xb4, 0x10, 0x12, 0x19,
	0x0a, 0x14, 0x45, 0x72, 0x72, 0x44, 0x42, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xb5, 0x10, 0x12, 0x27, 0x0a, 0x22, 0x45, 0x72, 0x72,
	0x44, 0x42, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x67, 0x6f, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x6e, 0x74, 0x10,
	0xb6, 0x10, 0x12, 0x2a, 0x0a, 0x25, 0x45, 0x72, 0x72, 0x44, 0x42, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x67,
	0x6f, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x64, 0x10, 0xb7, 0x10, 0x12, 0x2b,
	0x0a, 0x26, 0x45, 0x72, 0x72, 0x44, 0x42, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x10, 0xb8, 0x10, 0x12, 0x2b, 0x0a, 0x26, 0x45,
	0x72, 0x72, 0x44, 0x42, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0xb9, 0x10, 0x12, 0x23, 0x0a, 0x1e, 0x45, 0x72, 0x72, 0x44,
	0x42, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0xba, 0x10, 0x12, 0x19, 0x0a,
	0x14, 0x45, 0x72, 0x72, 0x44, 0x42, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x10, 0xbb, 0x10, 0x12, 0x22, 0x0a, 0x1d, 0x45, 0x72, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x10, 0x98, 0x11, 0x12, 0x21, 0x0a, 0x1c,
	0x45, 0x72, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x99, 0x11, 0x12,
	0x19, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x10, 0xfc, 0x11, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x72,
	0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x10, 0xfd, 0x11, 0x12, 0x14, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x10, 0xfe, 0x11, 0x12, 0x1e, 0x0a, 0x19,
	0x45, 0x72, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x10, 0xff, 0x11, 0x12, 0x1c, 0x0a, 0x17,
	0x45, 0x72, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x80, 0x12, 0x12, 0x10, 0x0a, 0x0b, 0x45, 0x72,
	0x72, 0x54, 0x65, 0x73, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x10, 0xe1, 0x12, 0x12, 0x14, 0x0a, 0x0f,
	0x45, 0x72, 0x72, 0x54, 0x65, 0x73, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x63, 0x76, 0x10,
	0xe2, 0x12, 0x12, 0x14, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x54, 0x65, 0x73, 0x74, 0x45, 0x63, 0x68,
	0x6f, 0x53, 0x65, 0x6e, 0x64, 0x10, 0xe3, 0x12, 0x12, 0x14, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x10, 0xa0, 0x1f, 0x12, 0x22,
	0x0a, 0x1d, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x10,
	0xa1, 0x1f, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10,
	0xa2, 0x1f, 0x12, 0x23, 0x0a, 0x1e, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0xa3, 0x1f, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x72, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x10, 0xa4, 0x1f, 0x12, 0x21, 0x0a, 0x1c, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x10, 0xa5, 0x1f, 0x12, 0x27, 0x0a, 0x22, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0xa6, 0x1f, 0x12,
	0x27, 0x0a, 0x22, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x10, 0xa7, 0x1f, 0x12, 0x20, 0x0a, 0x1b, 0x45, 0x72, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0xa8, 0x1f, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x72,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x55, 0x52, 0x4c, 0x10, 0xa9, 0x1f, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x72,
	0x72, 0x43, 0x4c, 0x49, 0x4e, 0x6f, 0x54, 0x65, 0x72, 0x6d, 0x63, 0x61, 0x70, 0x73, 0x10, 0xb9,
	0x17, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x10, 0xe8, 0x20, 0x12, 0x39, 0x0a, 0x34,
	0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x10, 0xe9, 0x20, 0x12, 0x2f, 0x0a, 0x2a, 0x45, 0x72, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xea, 0x20, 0x12, 0x36, 0x0a, 0x31, 0x45, 0x72, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x43,
	0x61, 0x6e, 0x74, 0x42, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x10, 0xeb, 0x20,
	0x12, 0x34, 0x0a, 0x2f, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x10, 0xec, 0x20, 0x12, 0x32, 0x0a, 0x2d, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x10, 0xed, 0x20, 0x12, 0x32, 0x0a, 0x2d, 0x45, 0x72,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x10, 0xee, 0x20, 0x12, 0x34,
	0x0a, 0x2f, 0x45, 0x72, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x44, 0x10, 0xef, 0x20, 0x12, 0x14, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x88, 0x27, 0x12, 0x21, 0x0a, 0x1c, 0x45, 0x72,
	0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x49,
	0x44, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x89, 0x27, 0x12, 0x21, 0x0a,
	0x1c, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x10, 0x8a, 0x27,
	0x12, 0x23, 0x0a, 0x1e, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x44, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x10, 0x8b, 0x27, 0x12, 0x23, 0x0a, 0x1e, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65,
	0x63, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x10, 0x8c, 0x27, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x72,
	0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x52, 0x50,
	0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10, 0x8d, 0x27, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x72,
	0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x8e, 0x27, 0x12, 0x20, 0x0a, 0x1b, 0x45,
	0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x8f, 0x27, 0x12, 0x22, 0x0a,
	0x1d, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x90,
	0x27, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x10,
	0x91, 0x27, 0x12, 0x20, 0x0a, 0x1b, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x10, 0x92, 0x27, 0x12, 0x22, 0x0a, 0x1d, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x4c,
	0x49, 0x41, 0x72, 0x67, 0x73, 0x10, 0x93, 0x27, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x72, 0x72, 0x42,
	0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x53, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x94, 0x27, 0x12, 0x21, 0x0a, 0x1c, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x95, 0x27, 0x12, 0x25, 0x0a, 0x20, 0x45, 0x72, 0x72, 0x42,
	0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x96, 0x27, 0x12,
	0x1f, 0x0a, 0x1a, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x47, 0x65, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x97, 0x27,
	0x12, 0x22, 0x0a, 0x1d, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0x98, 0x27, 0x12, 0x20, 0x0a, 0x1b, 0x45, 0x72, 0x72, 0x42, 0x65, 0x72, 0x74, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0x99, 0x27, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x10, 0x9a, 0x27, 0x12, 0x0c, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x50, 0x75, 0x73,
	0x68, 0x10, 0xf0, 0x2e, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x72, 0x72, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x72, 0x6f, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0xf1, 0x2e, 0x12, 0x1b,
	0x0a, 0x16, 0x45, 0x72, 0x72, 0x50, 0x75, 0x73, 0x68, 0x55, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x10, 0xf2, 0x2e, 0x12, 0x1a, 0x0a, 0x15, 0x45,
	0x72, 0x72, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x10, 0xf3, 0x2e, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x72, 0x72, 0x50, 0x75,
	0x73, 0x68, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0xf4, 0x2e, 0x12, 0x1b, 0x0a, 0x16, 0x45, 0x72, 0x72, 0x50,
	0x75, 0x73, 0x68, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x49, 0x44, 0x10, 0xf5, 0x2e, 0x12, 0x1e, 0x0a, 0x19, 0x45, 0x72, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0xf6, 0x2e, 0x12, 0x14, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0xf7, 0x2e, 0x12, 0x1b, 0x0a, 0x16, 0x45,
	0x72, 0x72, 0x50, 0x75, 0x73, 0x68, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0xf8, 0x2e, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x64, 0x10, 0xf9, 0x2e, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x10,
	0xfa, 0x2e, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x72, 0x72, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xfb, 0x2e, 0x42, 0x21,
	0x5a, 0x1f, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_berty_errcode_proto_rawDescOnce sync.Once
	file_berty_errcode_proto_rawDescData = file_berty_errcode_proto_rawDesc
)

func file_berty_errcode_proto_rawDescGZIP() []byte {
	file_berty_errcode_proto_rawDescOnce.Do(func() {
		file_berty_errcode_proto_rawDescData = protoimpl.X.CompressGZIP(file_berty_errcode_proto_rawDescData)
	})
	return file_berty_errcode_proto_rawDescData
}

var file_berty_errcode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_berty_errcode_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_berty_errcode_proto_goTypes = []any{
	(ErrCode)(0),       // 0: berty.errcode.ErrCode
	(*ErrDetails)(nil), // 1: berty.errcode.ErrDetails
}
var file_berty_errcode_proto_depIdxs = []int32{
	0, // 0: berty.errcode.ErrDetails.codes:type_name -> berty.errcode.ErrCode
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_berty_errcode_proto_init() }
func file_berty_errcode_proto_init() {
	if File_berty_errcode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_berty_errcode_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ErrDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_berty_errcode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_berty_errcode_proto_goTypes,
		DependencyIndexes: file_berty_errcode_proto_depIdxs,
		EnumInfos:         file_berty_errcode_proto_enumTypes,
		MessageInfos:      file_berty_errcode_proto_msgTypes,
	}.Build()
	File_berty_errcode_proto = out.File
	file_berty_errcode_proto_rawDesc = nil
	file_berty_errcode_proto_goTypes = nil
	file_berty_errcode_proto_depIdxs = nil
}
