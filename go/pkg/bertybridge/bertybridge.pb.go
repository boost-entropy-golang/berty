// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bertybridge/bertybridge.proto

package bertybridge

import (
	errcode "berty.tech/berty/v2/go/pkg/errcode"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GRPCErrCode int32

const (
	// OK is returned on success.
	GRPCErrCode_OK GRPCErrCode = 0
	// Canceled indicates the operation was canceled (typically by the caller).
	//
	// The gRPC framework will generate this error code when cancellation
	// is requested.
	GRPCErrCode_CANCELED GRPCErrCode = 1
	// Unknown error. An example of where this error may be returned is
	// if a Status value received from another address space belongs to
	// an error-space that is not known in this address space. Also
	// errors raised by APIs that do not return enough error information
	// may be converted to this error.
	//
	// The gRPC framework will generate this error code in the above two
	// mentioned cases.
	GRPCErrCode_UNKNOWN GRPCErrCode = 2
	// InvalidArgument indicates client specified an invalid argument.
	// Note that this differs from FailedPrecondition. It indicates arguments
	// that are problematic regardless of the state of the system
	// (e.g., a malformed file name).
	//
	// This error code will not be generated by the gRPC framework.
	GRPCErrCode_INVALID_ARGUMENT GRPCErrCode = 3
	// DeadlineExceeded means operation expired before completion.
	// For operations that change the state of the system, this error may be
	// returned even if the operation has completed successfully. For
	// example, a successful response from a server could have been delayed
	// long enough for the deadline to expire.
	//
	// The gRPC framework will generate this error code when the deadline is
	// exceeded.
	GRPCErrCode_DEADLINE_EXCEEDED GRPCErrCode = 4
	// NotFound means some requested entity (e.g., file or directory) was
	// not found.
	//
	// This error code will not be generated by the gRPC framework.
	GRPCErrCode_NOT_FOUND GRPCErrCode = 5
	// AlreadyExists means an attempt to create an entity failed because one
	// already exists.
	//
	// This error code will not be generated by the gRPC framework.
	GRPCErrCode_ALREADY_EXISTS GRPCErrCode = 6
	// PermissionDenied indicates the caller does not have permission to
	// execute the specified operation. It must not be used for rejections
	// caused by exhausting some resource (use ResourceExhausted
	// instead for those errors). It must not be
	// used if the caller cannot be identified (use Unauthenticated
	// instead for those errors).
	//
	// This error code will not be generated by the gRPC core framework,
	// but expect authentication middleware to use it.
	GRPCErrCode_PERMISSION_DENIED GRPCErrCode = 7
	// ResourceExhausted indicates some resource has been exhausted, perhaps
	// a per-user quota, or perhaps the entire file system is out of space.
	//
	// This error code will be generated by the gRPC framework in
	// out-of-memory and server overload situations, or when a message is
	// larger than the configured maximum size.
	GRPCErrCode_RESOURCE_EXHAUSTED GRPCErrCode = 8
	// FailedPrecondition indicates operation was rejected because the
	// system is not in a state required for the operation's execution.
	// For example, directory to be deleted may be non-empty, an rmdir
	// operation is applied to a non-directory, etc.
	//
	// A litmus test that may help a service implementor in deciding
	// between FailedPrecondition, Aborted, and Unavailable:
	//
	//	(a) Use Unavailable if the client can retry just the failing call.
	//	(b) Use Aborted if the client should retry at a higher-level
	//	    (e.g., restarting a read-modify-write sequence).
	//	(c) Use FailedPrecondition if the client should not retry until
	//	    the system state has been explicitly fixed. E.g., if an "rmdir"
	//	    fails because the directory is non-empty, FailedPrecondition
	//	    should be returned since the client should not retry unless
	//	    they have first fixed up the directory by deleting files from it.
	//	(d) Use FailedPrecondition if the client performs conditional
	//	    REST Get/Update/Delete on a resource and the resource on the
	//	    server does not match the condition. E.g., conflicting
	//	    read-modify-write on the same resource.
	//
	// This error code will not be generated by the gRPC framework.
	GRPCErrCode_FAILED_PRECONDITION GRPCErrCode = 9
	// Aborted indicates the operation was aborted, typically due to a
	// concurrency issue like sequencer check failures, transaction aborts,
	// etc.
	//
	// See litmus test above for deciding between FailedPrecondition,
	// Aborted, and Unavailable.
	//
	// This error code will not be generated by the gRPC framework.
	GRPCErrCode_ABORTED GRPCErrCode = 10
	// OutOfRange means operation was attempted past the valid range.
	// E.g., seeking or reading past end of file.
	//
	// Unlike InvalidArgument, this error indicates a problem that may
	// be fixed if the system state changes. For example, a 32-bit file
	// system will generate InvalidArgument if asked to read at an
	// offset that is not in the range [0,2^32-1], but it will generate
	// OutOfRange if asked to read from an offset past the current
	// file size.
	//
	// There is a fair bit of overlap between FailedPrecondition and
	// OutOfRange. We recommend using OutOfRange (the more specific
	// error) when it applies so that callers who are iterating through
	// a space can easily look for an OutOfRange error to detect when
	// they are done.
	//
	// This error code will not be generated by the gRPC framework.
	GRPCErrCode_OUT_OF_RANGE GRPCErrCode = 11
	// Unimplemented indicates operation is not implemented or not
	// supported/enabled in this service.
	//
	// This error code will be generated by the gRPC framework. Most
	// commonly, you will see this error code when a method implementation
	// is missing on the server. It can also be generated for unknown
	// compression algorithms or a disagreement as to whether an RPC should
	// be streaming.
	GRPCErrCode_UNIMPLEMENTED GRPCErrCode = 12
	// Internal errors. Means some invariants expected by underlying
	// system has been broken. If you see one of these errors,
	// something is very broken.
	//
	// This error code will be generated by the gRPC framework in several
	// internal error conditions.
	GRPCErrCode_INTERNAL GRPCErrCode = 13
	// Unavailable indicates the service is currently unavailable.
	// This is a most likely a transient condition and may be corrected
	// by retrying with a backoff. Note that it is not always safe to retry
	// non-idempotent operations.
	//
	// See litmus test above for deciding between FailedPrecondition,
	// Aborted, and Unavailable.
	//
	// This error code will be generated by the gRPC framework during
	// abrupt shutdown of a server process or network connection.
	GRPCErrCode_UNAVAILABLE GRPCErrCode = 14
	// DataLoss indicates unrecoverable data loss or corruption.
	//
	// This error code will not be generated by the gRPC framework.
	GRPCErrCode_DATA_LOSS GRPCErrCode = 15
	// Unauthenticated indicates the request does not have valid
	// authentication credentials for the operation.
	//
	// The gRPC framework will generate this error code when the
	// authentication metadata is invalid or a Credentials callback fails,
	// but also expect authentication middleware to generate it.
	GRPCErrCode_UNAUTHENTICATED GRPCErrCode = 16
)

// Enum value maps for GRPCErrCode.
var (
	GRPCErrCode_name = map[int32]string{
		0:  "OK",
		1:  "CANCELED",
		2:  "UNKNOWN",
		3:  "INVALID_ARGUMENT",
		4:  "DEADLINE_EXCEEDED",
		5:  "NOT_FOUND",
		6:  "ALREADY_EXISTS",
		7:  "PERMISSION_DENIED",
		8:  "RESOURCE_EXHAUSTED",
		9:  "FAILED_PRECONDITION",
		10: "ABORTED",
		11: "OUT_OF_RANGE",
		12: "UNIMPLEMENTED",
		13: "INTERNAL",
		14: "UNAVAILABLE",
		15: "DATA_LOSS",
		16: "UNAUTHENTICATED",
	}
	GRPCErrCode_value = map[string]int32{
		"OK":                  0,
		"CANCELED":            1,
		"UNKNOWN":             2,
		"INVALID_ARGUMENT":    3,
		"DEADLINE_EXCEEDED":   4,
		"NOT_FOUND":           5,
		"ALREADY_EXISTS":      6,
		"PERMISSION_DENIED":   7,
		"RESOURCE_EXHAUSTED":  8,
		"FAILED_PRECONDITION": 9,
		"ABORTED":             10,
		"OUT_OF_RANGE":        11,
		"UNIMPLEMENTED":       12,
		"INTERNAL":            13,
		"UNAVAILABLE":         14,
		"DATA_LOSS":           15,
		"UNAUTHENTICATED":     16,
	}
)

func (x GRPCErrCode) Enum() *GRPCErrCode {
	p := new(GRPCErrCode)
	*p = x
	return p
}

func (x GRPCErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GRPCErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_bertybridge_bertybridge_proto_enumTypes[0].Descriptor()
}

func (GRPCErrCode) Type() protoreflect.EnumType {
	return &file_bertybridge_bertybridge_proto_enumTypes[0]
}

func (x GRPCErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GRPCErrCode.Descriptor instead.
func (GRPCErrCode) EnumDescriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{0}
}

type ClientInvokeUnary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientInvokeUnary) Reset() {
	*x = ClientInvokeUnary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInvokeUnary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInvokeUnary) ProtoMessage() {}

func (x *ClientInvokeUnary) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInvokeUnary.ProtoReflect.Descriptor instead.
func (*ClientInvokeUnary) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{0}
}

type ClientCreateStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientCreateStream) Reset() {
	*x = ClientCreateStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCreateStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCreateStream) ProtoMessage() {}

func (x *ClientCreateStream) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCreateStream.ProtoReflect.Descriptor instead.
func (*ClientCreateStream) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{1}
}

type ClientStreamSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientStreamSend) Reset() {
	*x = ClientStreamSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamSend) ProtoMessage() {}

func (x *ClientStreamSend) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamSend.ProtoReflect.Descriptor instead.
func (*ClientStreamSend) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{2}
}

type ClientStreamRecv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientStreamRecv) Reset() {
	*x = ClientStreamRecv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamRecv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamRecv) ProtoMessage() {}

func (x *ClientStreamRecv) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamRecv.ProtoReflect.Descriptor instead.
func (*ClientStreamRecv) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{3}
}

type ClientStreamClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientStreamClose) Reset() {
	*x = ClientStreamClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamClose) ProtoMessage() {}

func (x *ClientStreamClose) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamClose.ProtoReflect.Descriptor instead.
func (*ClientStreamClose) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{4}
}

type ClientStreamCloseAndRecv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientStreamCloseAndRecv) Reset() {
	*x = ClientStreamCloseAndRecv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamCloseAndRecv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamCloseAndRecv) ProtoMessage() {}

func (x *ClientStreamCloseAndRecv) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamCloseAndRecv.ProtoReflect.Descriptor instead.
func (*ClientStreamCloseAndRecv) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{5}
}

type MethodDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the method name only, without the service name or package name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// IsClientStream indicates whether the RPC is a client streaming RPC.
	IsClientStream bool `protobuf:"varint,2,opt,name=is_client_stream,json=isClientStream,proto3" json:"is_client_stream,omitempty"`
	// IsServerStream indicates whether the RPC is a server streaming RPC.
	IsServerStream bool `protobuf:"varint,3,opt,name=is_server_stream,json=isServerStream,proto3" json:"is_server_stream,omitempty"`
}

func (x *MethodDesc) Reset() {
	*x = MethodDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodDesc) ProtoMessage() {}

func (x *MethodDesc) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodDesc.ProtoReflect.Descriptor instead.
func (*MethodDesc) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{6}
}

func (x *MethodDesc) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MethodDesc) GetIsClientStream() bool {
	if x != nil {
		return x.IsClientStream
	}
	return false
}

func (x *MethodDesc) GetIsServerStream() bool {
	if x != nil {
		return x.IsServerStream
	}
	return false
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{7}
}

func (x *Metadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Metadata) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// grpc error code
	GrpcErrorCode GRPCErrCode `protobuf:"varint,1,opt,name=grpc_error_code,json=grpcErrorCode,proto3,enum=berty.bridge.v1.GRPCErrCode" json:"grpc_error_code,omitempty"`
	// toplevel error
	ErrorCode errcode.ErrCode `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,enum=berty.errcode.ErrCode" json:"error_code,omitempty"`
	// toplevel error message
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// detailed errors
	ErrorDetails *errcode.ErrDetails `protobuf:"bytes,4,opt,name=error_details,json=errorDetails,proto3" json:"error_details,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{8}
}

func (x *Error) GetGrpcErrorCode() GRPCErrCode {
	if x != nil {
		return x.GrpcErrorCode
	}
	return GRPCErrCode_OK
}

func (x *Error) GetErrorCode() errcode.ErrCode {
	if x != nil {
		return x.ErrorCode
	}
	return errcode.ErrCode(0)
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetErrorDetails() *errcode.ErrDetails {
	if x != nil {
		return x.ErrorDetails
	}
	return nil
}

type ClientInvokeUnary_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodDesc *MethodDesc `protobuf:"bytes,2,opt,name=method_desc,json=methodDesc,proto3" json:"method_desc,omitempty"`
	Payload    []byte      `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Header     []*Metadata `protobuf:"bytes,4,rep,name=header,proto3" json:"header,omitempty"`
}

func (x *ClientInvokeUnary_Request) Reset() {
	*x = ClientInvokeUnary_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInvokeUnary_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInvokeUnary_Request) ProtoMessage() {}

func (x *ClientInvokeUnary_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInvokeUnary_Request.ProtoReflect.Descriptor instead.
func (*ClientInvokeUnary_Request) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ClientInvokeUnary_Request) GetMethodDesc() *MethodDesc {
	if x != nil {
		return x.MethodDesc
	}
	return nil
}

func (x *ClientInvokeUnary_Request) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientInvokeUnary_Request) GetHeader() []*Metadata {
	if x != nil {
		return x.Header
	}
	return nil
}

type ClientInvokeUnary_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte      `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Trailer []*Metadata `protobuf:"bytes,3,rep,name=trailer,proto3" json:"trailer,omitempty"`
	Error   *Error      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClientInvokeUnary_Reply) Reset() {
	*x = ClientInvokeUnary_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInvokeUnary_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInvokeUnary_Reply) ProtoMessage() {}

func (x *ClientInvokeUnary_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInvokeUnary_Reply.ProtoReflect.Descriptor instead.
func (*ClientInvokeUnary_Reply) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ClientInvokeUnary_Reply) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientInvokeUnary_Reply) GetTrailer() []*Metadata {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *ClientInvokeUnary_Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ClientCreateStream_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodDesc *MethodDesc `protobuf:"bytes,2,opt,name=method_desc,json=methodDesc,proto3" json:"method_desc,omitempty"`
	Payload    []byte      `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Header     []*Metadata `protobuf:"bytes,4,rep,name=header,proto3" json:"header,omitempty"`
}

func (x *ClientCreateStream_Request) Reset() {
	*x = ClientCreateStream_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCreateStream_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCreateStream_Request) ProtoMessage() {}

func (x *ClientCreateStream_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCreateStream_Request.ProtoReflect.Descriptor instead.
func (*ClientCreateStream_Request) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ClientCreateStream_Request) GetMethodDesc() *MethodDesc {
	if x != nil {
		return x.MethodDesc
	}
	return nil
}

func (x *ClientCreateStream_Request) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientCreateStream_Request) GetHeader() []*Metadata {
	if x != nil {
		return x.Header
	}
	return nil
}

type ClientCreateStream_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string      `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Trailer  []*Metadata `protobuf:"bytes,2,rep,name=trailer,proto3" json:"trailer,omitempty"`
	Error    *Error      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClientCreateStream_Reply) Reset() {
	*x = ClientCreateStream_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCreateStream_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCreateStream_Reply) ProtoMessage() {}

func (x *ClientCreateStream_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCreateStream_Reply.ProtoReflect.Descriptor instead.
func (*ClientCreateStream_Reply) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ClientCreateStream_Reply) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ClientCreateStream_Reply) GetTrailer() []*Metadata {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *ClientCreateStream_Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ClientStreamSend_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Payload  []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ClientStreamSend_Request) Reset() {
	*x = ClientStreamSend_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamSend_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamSend_Request) ProtoMessage() {}

func (x *ClientStreamSend_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamSend_Request.ProtoReflect.Descriptor instead.
func (*ClientStreamSend_Request) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ClientStreamSend_Request) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ClientStreamSend_Request) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ClientStreamSend_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string      `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Trailer  []*Metadata `protobuf:"bytes,2,rep,name=trailer,proto3" json:"trailer,omitempty"`
	Error    *Error      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClientStreamSend_Reply) Reset() {
	*x = ClientStreamSend_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamSend_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamSend_Reply) ProtoMessage() {}

func (x *ClientStreamSend_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamSend_Reply.ProtoReflect.Descriptor instead.
func (*ClientStreamSend_Reply) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ClientStreamSend_Reply) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ClientStreamSend_Reply) GetTrailer() []*Metadata {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *ClientStreamSend_Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ClientStreamRecv_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
}

func (x *ClientStreamRecv_Request) Reset() {
	*x = ClientStreamRecv_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamRecv_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamRecv_Request) ProtoMessage() {}

func (x *ClientStreamRecv_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamRecv_Request.ProtoReflect.Descriptor instead.
func (*ClientStreamRecv_Request) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ClientStreamRecv_Request) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type ClientStreamRecv_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string      `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Payload  []byte      `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Trailer  []*Metadata `protobuf:"bytes,3,rep,name=trailer,proto3" json:"trailer,omitempty"`
	Error    *Error      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClientStreamRecv_Reply) Reset() {
	*x = ClientStreamRecv_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamRecv_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamRecv_Reply) ProtoMessage() {}

func (x *ClientStreamRecv_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamRecv_Reply.ProtoReflect.Descriptor instead.
func (*ClientStreamRecv_Reply) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ClientStreamRecv_Reply) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ClientStreamRecv_Reply) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientStreamRecv_Reply) GetTrailer() []*Metadata {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *ClientStreamRecv_Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ClientStreamClose_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
}

func (x *ClientStreamClose_Request) Reset() {
	*x = ClientStreamClose_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamClose_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamClose_Request) ProtoMessage() {}

func (x *ClientStreamClose_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamClose_Request.ProtoReflect.Descriptor instead.
func (*ClientStreamClose_Request) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ClientStreamClose_Request) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type ClientStreamClose_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string      `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Trailer  []*Metadata `protobuf:"bytes,2,rep,name=trailer,proto3" json:"trailer,omitempty"`
	Error    *Error      `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClientStreamClose_Reply) Reset() {
	*x = ClientStreamClose_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamClose_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamClose_Reply) ProtoMessage() {}

func (x *ClientStreamClose_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamClose_Reply.ProtoReflect.Descriptor instead.
func (*ClientStreamClose_Reply) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ClientStreamClose_Reply) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ClientStreamClose_Reply) GetTrailer() []*Metadata {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *ClientStreamClose_Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ClientStreamCloseAndRecv_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
}

func (x *ClientStreamCloseAndRecv_Request) Reset() {
	*x = ClientStreamCloseAndRecv_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamCloseAndRecv_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamCloseAndRecv_Request) ProtoMessage() {}

func (x *ClientStreamCloseAndRecv_Request) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamCloseAndRecv_Request.ProtoReflect.Descriptor instead.
func (*ClientStreamCloseAndRecv_Request) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ClientStreamCloseAndRecv_Request) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type ClientStreamCloseAndRecv_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string      `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Payload  []byte      `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Trailer  []*Metadata `protobuf:"bytes,3,rep,name=trailer,proto3" json:"trailer,omitempty"`
	Error    *Error      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClientStreamCloseAndRecv_Reply) Reset() {
	*x = ClientStreamCloseAndRecv_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bertybridge_bertybridge_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStreamCloseAndRecv_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStreamCloseAndRecv_Reply) ProtoMessage() {}

func (x *ClientStreamCloseAndRecv_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_bertybridge_bertybridge_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStreamCloseAndRecv_Reply.ProtoReflect.Descriptor instead.
func (*ClientStreamCloseAndRecv_Reply) Descriptor() ([]byte, []int) {
	return file_bertybridge_bertybridge_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ClientStreamCloseAndRecv_Reply) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ClientStreamCloseAndRecv_Reply) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ClientStreamCloseAndRecv_Reply) GetTrailer() []*Metadata {
	if x != nil {
		return x.Trailer
	}
	return nil
}

func (x *ClientStreamCloseAndRecv_Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_bertybridge_bertybridge_proto protoreflect.FileDescriptor

var file_bertybridge_bertybridge_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x62, 0x65, 0x72, 0x74, 0x79, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2f, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x13, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2f, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x1a, 0x94, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x1a, 0x84, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb5, 0x02, 0x0a, 0x12, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x1a, 0x94, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x52, 0x0a,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x87, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69,
	0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x1a, 0x40, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x87, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x63, 0x76, 0x1a, 0x26, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x1a,
	0xa1, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x33, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x1a, 0x26, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x1a, 0x87, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69,
	0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xe6, 0x01, 0x0a, 0x18,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x76, 0x1a, 0x26, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x1a, 0xa1, 0x01, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x74, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x34, 0x0a, 0x08, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0xde, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x0d, 0x67, 0x72, 0x70, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x35, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x65, 0x72, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x2a, 0xbd, 0x02, 0x0a, 0x0b, 0x47, 0x52, 0x50, 0x43, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45,
	0x41, 0x44, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x05,
	0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x53, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x48, 0x41, 0x55, 0x53, 0x54, 0x45,
	0x44, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x52,
	0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x55, 0x54,
	0x5f, 0x4f, 0x46, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0e, 0x12, 0x0d, 0x0a,
	0x09, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x4f, 0x53, 0x53, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f,
	0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x10, 0x32, 0xa3, 0x05, 0x0a, 0x0d, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x2b, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x10,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x63, 0x76, 0x12, 0x29, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x63, 0x76, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x63, 0x76, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x69, 0x0a, 0x11,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x2a, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x7e, 0x0a, 0x18, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x76, 0x12, 0x31, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x76, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x76, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x25, 0x5a, 0x23, 0x62, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x62, 0x65, 0x72, 0x74, 0x79, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x62, 0x65, 0x72, 0x74, 0x79, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bertybridge_bertybridge_proto_rawDescOnce sync.Once
	file_bertybridge_bertybridge_proto_rawDescData = file_bertybridge_bertybridge_proto_rawDesc
)

func file_bertybridge_bertybridge_proto_rawDescGZIP() []byte {
	file_bertybridge_bertybridge_proto_rawDescOnce.Do(func() {
		file_bertybridge_bertybridge_proto_rawDescData = protoimpl.X.CompressGZIP(file_bertybridge_bertybridge_proto_rawDescData)
	})
	return file_bertybridge_bertybridge_proto_rawDescData
}

var file_bertybridge_bertybridge_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bertybridge_bertybridge_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_bertybridge_bertybridge_proto_goTypes = []any{
	(GRPCErrCode)(0),                         // 0: berty.bridge.v1.GRPCErrCode
	(*ClientInvokeUnary)(nil),                // 1: berty.bridge.v1.ClientInvokeUnary
	(*ClientCreateStream)(nil),               // 2: berty.bridge.v1.ClientCreateStream
	(*ClientStreamSend)(nil),                 // 3: berty.bridge.v1.ClientStreamSend
	(*ClientStreamRecv)(nil),                 // 4: berty.bridge.v1.ClientStreamRecv
	(*ClientStreamClose)(nil),                // 5: berty.bridge.v1.ClientStreamClose
	(*ClientStreamCloseAndRecv)(nil),         // 6: berty.bridge.v1.ClientStreamCloseAndRecv
	(*MethodDesc)(nil),                       // 7: berty.bridge.v1.MethodDesc
	(*Metadata)(nil),                         // 8: berty.bridge.v1.Metadata
	(*Error)(nil),                            // 9: berty.bridge.v1.Error
	(*ClientInvokeUnary_Request)(nil),        // 10: berty.bridge.v1.ClientInvokeUnary.Request
	(*ClientInvokeUnary_Reply)(nil),          // 11: berty.bridge.v1.ClientInvokeUnary.Reply
	(*ClientCreateStream_Request)(nil),       // 12: berty.bridge.v1.ClientCreateStream.Request
	(*ClientCreateStream_Reply)(nil),         // 13: berty.bridge.v1.ClientCreateStream.Reply
	(*ClientStreamSend_Request)(nil),         // 14: berty.bridge.v1.ClientStreamSend.Request
	(*ClientStreamSend_Reply)(nil),           // 15: berty.bridge.v1.ClientStreamSend.Reply
	(*ClientStreamRecv_Request)(nil),         // 16: berty.bridge.v1.ClientStreamRecv.Request
	(*ClientStreamRecv_Reply)(nil),           // 17: berty.bridge.v1.ClientStreamRecv.Reply
	(*ClientStreamClose_Request)(nil),        // 18: berty.bridge.v1.ClientStreamClose.Request
	(*ClientStreamClose_Reply)(nil),          // 19: berty.bridge.v1.ClientStreamClose.Reply
	(*ClientStreamCloseAndRecv_Request)(nil), // 20: berty.bridge.v1.ClientStreamCloseAndRecv.Request
	(*ClientStreamCloseAndRecv_Reply)(nil),   // 21: berty.bridge.v1.ClientStreamCloseAndRecv.Reply
	(errcode.ErrCode)(0),                     // 22: berty.errcode.ErrCode
	(*errcode.ErrDetails)(nil),               // 23: berty.errcode.ErrDetails
}
var file_bertybridge_bertybridge_proto_depIdxs = []int32{
	0,  // 0: berty.bridge.v1.Error.grpc_error_code:type_name -> berty.bridge.v1.GRPCErrCode
	22, // 1: berty.bridge.v1.Error.error_code:type_name -> berty.errcode.ErrCode
	23, // 2: berty.bridge.v1.Error.error_details:type_name -> berty.errcode.ErrDetails
	7,  // 3: berty.bridge.v1.ClientInvokeUnary.Request.method_desc:type_name -> berty.bridge.v1.MethodDesc
	8,  // 4: berty.bridge.v1.ClientInvokeUnary.Request.header:type_name -> berty.bridge.v1.Metadata
	8,  // 5: berty.bridge.v1.ClientInvokeUnary.Reply.trailer:type_name -> berty.bridge.v1.Metadata
	9,  // 6: berty.bridge.v1.ClientInvokeUnary.Reply.error:type_name -> berty.bridge.v1.Error
	7,  // 7: berty.bridge.v1.ClientCreateStream.Request.method_desc:type_name -> berty.bridge.v1.MethodDesc
	8,  // 8: berty.bridge.v1.ClientCreateStream.Request.header:type_name -> berty.bridge.v1.Metadata
	8,  // 9: berty.bridge.v1.ClientCreateStream.Reply.trailer:type_name -> berty.bridge.v1.Metadata
	9,  // 10: berty.bridge.v1.ClientCreateStream.Reply.error:type_name -> berty.bridge.v1.Error
	8,  // 11: berty.bridge.v1.ClientStreamSend.Reply.trailer:type_name -> berty.bridge.v1.Metadata
	9,  // 12: berty.bridge.v1.ClientStreamSend.Reply.error:type_name -> berty.bridge.v1.Error
	8,  // 13: berty.bridge.v1.ClientStreamRecv.Reply.trailer:type_name -> berty.bridge.v1.Metadata
	9,  // 14: berty.bridge.v1.ClientStreamRecv.Reply.error:type_name -> berty.bridge.v1.Error
	8,  // 15: berty.bridge.v1.ClientStreamClose.Reply.trailer:type_name -> berty.bridge.v1.Metadata
	9,  // 16: berty.bridge.v1.ClientStreamClose.Reply.error:type_name -> berty.bridge.v1.Error
	8,  // 17: berty.bridge.v1.ClientStreamCloseAndRecv.Reply.trailer:type_name -> berty.bridge.v1.Metadata
	9,  // 18: berty.bridge.v1.ClientStreamCloseAndRecv.Reply.error:type_name -> berty.bridge.v1.Error
	10, // 19: berty.bridge.v1.BridgeService.ClientInvokeUnary:input_type -> berty.bridge.v1.ClientInvokeUnary.Request
	12, // 20: berty.bridge.v1.BridgeService.CreateClientStream:input_type -> berty.bridge.v1.ClientCreateStream.Request
	14, // 21: berty.bridge.v1.BridgeService.ClientStreamSend:input_type -> berty.bridge.v1.ClientStreamSend.Request
	16, // 22: berty.bridge.v1.BridgeService.ClientStreamRecv:input_type -> berty.bridge.v1.ClientStreamRecv.Request
	18, // 23: berty.bridge.v1.BridgeService.ClientStreamClose:input_type -> berty.bridge.v1.ClientStreamClose.Request
	20, // 24: berty.bridge.v1.BridgeService.ClientStreamCloseAndRecv:input_type -> berty.bridge.v1.ClientStreamCloseAndRecv.Request
	11, // 25: berty.bridge.v1.BridgeService.ClientInvokeUnary:output_type -> berty.bridge.v1.ClientInvokeUnary.Reply
	13, // 26: berty.bridge.v1.BridgeService.CreateClientStream:output_type -> berty.bridge.v1.ClientCreateStream.Reply
	15, // 27: berty.bridge.v1.BridgeService.ClientStreamSend:output_type -> berty.bridge.v1.ClientStreamSend.Reply
	17, // 28: berty.bridge.v1.BridgeService.ClientStreamRecv:output_type -> berty.bridge.v1.ClientStreamRecv.Reply
	19, // 29: berty.bridge.v1.BridgeService.ClientStreamClose:output_type -> berty.bridge.v1.ClientStreamClose.Reply
	21, // 30: berty.bridge.v1.BridgeService.ClientStreamCloseAndRecv:output_type -> berty.bridge.v1.ClientStreamCloseAndRecv.Reply
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_bertybridge_bertybridge_proto_init() }
func file_bertybridge_bertybridge_proto_init() {
	if File_bertybridge_bertybridge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bertybridge_bertybridge_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ClientInvokeUnary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ClientCreateStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamRecv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamCloseAndRecv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MethodDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ClientInvokeUnary_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ClientInvokeUnary_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ClientCreateStream_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ClientCreateStream_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamSend_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamSend_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamRecv_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamRecv_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamClose_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamClose_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamCloseAndRecv_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bertybridge_bertybridge_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ClientStreamCloseAndRecv_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bertybridge_bertybridge_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bertybridge_bertybridge_proto_goTypes,
		DependencyIndexes: file_bertybridge_bertybridge_proto_depIdxs,
		EnumInfos:         file_bertybridge_bertybridge_proto_enumTypes,
		MessageInfos:      file_bertybridge_bertybridge_proto_msgTypes,
	}.Build()
	File_bertybridge_bertybridge_proto = out.File
	file_bertybridge_bertybridge_proto_rawDesc = nil
	file_bertybridge_bertybridge_proto_goTypes = nil
	file_bertybridge_bertybridge_proto_depIdxs = nil
}
